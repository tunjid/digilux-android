apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin:  'kotlin-kapt'

def keystoreProps = new Properties()
def propertiesFile = file("keystore.properties")

def keyAliasProp, keyPasswordProp, storePasswordProp, storeFileProp
def hasKeyInfo = propertiesFile.exists()

if (hasKeyInfo) {
    keystoreProps.load(new FileInputStream(propertiesFile))
    storeFileProp = file("release.keystore")
    keyAliasProp = keystoreProps['alias']
    keyPasswordProp = keystoreProps['aliasPassword']
    storePasswordProp = keystoreProps['keystorePassword']
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"
    defaultConfig {
        applicationId "com.tunjid.fingergestures"
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 52
        versionName "9.0.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            if (file('debugKeystore.properties').exists()) {
                Properties props = new Properties()
                props.load(new FileInputStream(file('debugKeystore.properties')))
                storeFile file(props['keystore'])
                storePassword props['keystore.password']
                keyAlias props['keyAlias']
                keyPassword props['keyPassword']
            }
        }
        if (hasKeyInfo) {
            release {
                storeFile storeFileProp
                keyAlias keyAliasProp
                keyPassword keyPasswordProp
                storePassword storePasswordProp
            }
            staging {
                storeFile storeFileProp
                keyAlias keyAliasProp
                keyPassword keyPasswordProp
                storePassword storePasswordProp
            }
        }
    }
    buildTypes {
        debug {
            applicationIdSuffix ".dev"
            buildConfigField "boolean", "DEV", "true"
        }
        staging {
            debuggable true
            buildConfigField "boolean", "DEV", "false"
            if (hasKeyInfo) signingConfig signingConfigs.staging
        }
        release {
            minifyEnabled true
            buildConfigField "boolean", "DEV", "false"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (hasKeyInfo) signingConfig signingConfigs.release
        }
    }
    buildFeatures {
        viewBinding true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.billingclient:billing:3.0.2'

    implementation 'androidx.dynamicanimation:dynamicanimation-ktx:1.0.0-alpha03'

    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.exifinterface:exifinterface:1.3.2'
    implementation 'androidx.fragment:fragment-ktx:1.2.5'
    implementation 'androidx.appcompat:appcompat:1.3.0-alpha02'
    implementation 'androidx.palette:palette-ktx:1.0.0'
    implementation 'androidx.core:core-ktx:1.3.2'

    implementation 'androidx.lifecycle:lifecycle-reactivestreams-ktx:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-common-java8:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'

    implementation 'com.google.android.material:material:1.2.1'
    implementation 'com.google.android:flexbox:1.1.0'

    implementation 'com.tunjid.androidx:core:1.3.0-alpha01'
    implementation 'com.tunjid.androidx:view:1.2.0-alpha01'
    implementation 'com.tunjid.androidx:material:1.0.2'
    implementation 'com.tunjid.androidx:navigation:1.2.0-beta06'
    implementation 'com.tunjid.androidx:recyclerview:1.2.0-alpha01'

    implementation 'io.reactivex.rxjava2:rxjava:2.2.20'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.4.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'com.jakewharton.rx2:replaying-share-kotlin:2.0.0'

    implementation 'com.squareup.picasso:picasso:2.71828'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$parent.ext.kotlin_version"

    // Dagger
    final dagger_version = '2.29.1'
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    compileOnly 'javax.annotation:javax.annotation-api:1.3.2'

    implementation('com.theartofdev.edmodo:android-image-cropper:2.8.0') {
        exclude module: 'support-annotations'
        exclude module: 'recyclerview-v7'
        exclude module: 'exifinterface'
        exclude module: 'appcompat-v7'
        exclude module: 'support-v13'
        exclude module: 'support-v4'
        exclude module: 'design'
    }

    implementation(group: "com.github.QuadFlask", name: "colorpicker", version: "0.0.13") {
        exclude module: 'appcompat-v7'
        exclude module: 'support-annotations'
        exclude module: 'support-v4'
        exclude module: 'support-v13'
        exclude module: 'recyclerview-v7'
        exclude module: 'design'
    }

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.5'

    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}
